


import pandas as pd
import numpy as np # for mathematics function 
import matplotlib.pyplot as plt #for visulizaton of data
import seaborn as sns




from sklearn.datasets import load_breast_cancer




cancer = load_breast_cancer()













cancer.keys()





print(cancer['DESCR'])





print(cancer['target'])





print(cancer['target_names'])





print(cancer['feature_names'])





cancer['data'].shape





df_cancer = pd.DataFrame(np.c_[cancer['data'],cancer['target']],columns = np.append(cancer['feature_names'],['target']))





df_cancer





df_cancer.head()





df_cancer.tail()





sns.pairplot(df_cancer,hue = 'target' , vars = ['mean radius','mean texture','mean perimeter','mean area','mean smoothness'])





sns.countplot(df_cancer ['target'])





sns.scatterplot(x = 'mean area' , y= 'mean smoothness' , hue = 'target',data = df_cancer)





plt.figure(figsize=(20,10))
sns.heatmap(df_cancer.corr(),annot = True)





x = df_cancer.drop(['target'],axis = 1)











y = df_cancer['target']











from sklearn.model_selection import train_test_split


# In[24]:


train_test_split


# In[25]:


x_train, x_test, y_train, y_test = train_test_split(  x, y, test_size=0.2, random_state=42)


# In[26]:


x_train


# In[27]:


y_train


# In[28]:


from sklearn.svm import SVC


# In[29]:


from sklearn.metrics import classification_report , confusion_matrix


# In[30]:


svc_model = SVC()


# In[31]:


svc_model.fit(x_train,y_train)


# In[32]:


y_predict = svc_model.predict(x_test)


# In[33]:


y_predict


# In[34]:


cm = confusion_matrix(y_test,y_predict)


# In[35]:


sns.heatmap(cm , annot = True)


# In[36]:


min_train = x_train.min()


# In[37]:


range_train = (x_train-min_train).max()


# In[38]:


x_train_scaled = (x_train - min_train)/range_train


# In[39]:


sns.scatterplot(x= x_train['mean area'], y = x_train['mean smoothness'] , hue = y_train)


# In[40]:


sns.scatterplot(x= x_train_scaled['mean area'], y = x_train_scaled['mean smoothness'] , hue = y_train)


# In[41]:


min_test = x_test.min()
range_test = (x_test-min_test).max()
x_test_scaled = (x_test - min_test)/range_test


# In[42]:


svc_model.fit(x_train_scaled,y_train)

y_predict=svc_model.predict(x_test_scaled)

cm = confusion_matrix(y_test,y_predict)

sns.heatmap(cm,annot = True)

print(classification_report(y_test , y_predict))

param_grid = {'C':[0.1,1,10,100] , 'gamma' : [1,0.1,0.01,0.001],'kernal' :['rbf']}

from sklearn.model_selection import GridSearchCV

grid = GridSearchCV(SVC(), param_grid , refit = True ,verbose = 4)

grid.fit(x_train_scaled, y_train)

grid_prediction = gird.predict(x_test_scaled)

cm = confusion_matrix(y_test,grid_prediction)

sns.heatmap(cm,annot = True)

print(classification_report(y_test , grid_prediction))



